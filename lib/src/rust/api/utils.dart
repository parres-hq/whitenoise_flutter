// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

import '../api.dart';
import '../frb_generated.dart';
import 'groups.dart';
import 'messages.dart';

Future<String> npubFromPublicKey({required PublicKey publicKey}) =>
    RustLib.instance.api.crateApiUtilsNpubFromPublicKey(publicKey: publicKey);

Future<String> npubFromHexPubkey({required String hexPubkey}) =>
    RustLib.instance.api.crateApiUtilsNpubFromHexPubkey(hexPubkey: hexPubkey);

Future<String> hexPubkeyFromNpub({required String npub}) =>
    RustLib.instance.api.crateApiUtilsHexPubkeyFromNpub(npub: npub);

Future<String> hexPubkeyFromPublicKey({required PublicKey publicKey}) => RustLib
    .instance
    .api
    .crateApiUtilsHexPubkeyFromPublicKey(publicKey: publicKey);

Future<RelayUrl> relayUrlFromString({required String url}) =>
    RustLib.instance.api.crateApiUtilsRelayUrlFromString(url: url);

Future<String> stringFromRelayUrl({required RelayUrl relayUrl}) =>
    RustLib.instance.api.crateApiUtilsStringFromRelayUrl(relayUrl: relayUrl);

Future<Tag> tagFromVec({required List<String> vec}) =>
    RustLib.instance.api.crateApiUtilsTagFromVec(vec: vec);

Future<String> whitenoiseErrorToString({required WhitenoiseError error}) =>
    RustLib.instance.api.crateApiUtilsWhitenoiseErrorToString(error: error);

Future<String> getDefaultBlossomServerUrl() =>
    RustLib.instance.api.crateApiUtilsGetDefaultBlossomServerUrl();

Future<String> groupIdToString({required GroupId groupId}) =>
    RustLib.instance.api.crateApiUtilsGroupIdToString(groupId: groupId);

Future<GroupId> groupIdFromString({required String groupId}) =>
    RustLib.instance.api.crateApiUtilsGroupIdFromString(groupId: groupId);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<RelayUrl>>
abstract class RelayUrl implements RustOpaqueInterface {}
