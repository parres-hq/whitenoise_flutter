// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

import '../frb_generated.dart';
import 'error.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `fmt`, `fmt`, `from`, `from`

Future<MediaFile> uploadChatMedia({
  required String accountPubkey,
  required String groupId,
  required String filePath,
}) => RustLib.instance.api.crateApiMediaFilesUploadChatMedia(
  accountPubkey: accountPubkey,
  groupId: groupId,
  filePath: filePath,
);

class FileMetadata {
  final String? originalFilename;
  final String? dimensions;
  final String? blurhash;

  const FileMetadata({
    this.originalFilename,
    this.dimensions,
    this.blurhash,
  });

  @override
  int get hashCode => originalFilename.hashCode ^ dimensions.hashCode ^ blurhash.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FileMetadata &&
          runtimeType == other.runtimeType &&
          originalFilename == other.originalFilename &&
          dimensions == other.dimensions &&
          blurhash == other.blurhash;
}

class MediaFile {
  final String id;
  final String mlsGroupId;
  final String accountPubkey;
  final String filePath;
  final String fileHash;
  final String mimeType;
  final String mediaType;
  final String blossomUrl;
  final String nostrKey;
  final FileMetadata? fileMetadata;
  final DateTime createdAt;

  const MediaFile({
    required this.id,
    required this.mlsGroupId,
    required this.accountPubkey,
    required this.filePath,
    required this.fileHash,
    required this.mimeType,
    required this.mediaType,
    required this.blossomUrl,
    required this.nostrKey,
    this.fileMetadata,
    required this.createdAt,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      mlsGroupId.hashCode ^
      accountPubkey.hashCode ^
      filePath.hashCode ^
      fileHash.hashCode ^
      mimeType.hashCode ^
      mediaType.hashCode ^
      blossomUrl.hashCode ^
      nostrKey.hashCode ^
      fileMetadata.hashCode ^
      createdAt.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MediaFile &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          mlsGroupId == other.mlsGroupId &&
          accountPubkey == other.accountPubkey &&
          filePath == other.filePath &&
          fileHash == other.fileHash &&
          mimeType == other.mimeType &&
          mediaType == other.mediaType &&
          blossomUrl == other.blossomUrl &&
          nostrKey == other.nostrKey &&
          fileMetadata == other.fileMetadata &&
          createdAt == other.createdAt;
}
