// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

import 'frb_generated.dart';

/// Initializes the Whitenoise system with the provided configuration.
///
/// # CRITICAL: Must be called first
/// This function MUST be called before any other Whitenoise methods are used.
/// It sets up the global singleton instance, creates necessary directories,
/// and initializes the database connections.
///
/// # Parameters
/// * `config` - WhitenoiseConfig object containing setup parameters
///
/// # Returns
/// * `Ok(())` - System successfully initialized
/// * `Err(WhitenoiseError)` - If initialization fails (directory creation, database setup, etc.)
///
/// # Example
/// ```rust
/// let config = create_whitenoise_config(
///     "/app/data".to_string(),
///     "/app/logs".to_string()
/// );
/// initialize_whitenoise(config).await?;
///
/// // Now other Whitenoise functions can be called
/// ```
///
/// # Errors
/// Common failure reasons:
/// - Insufficient permissions to create directories
/// - Database corruption or locking issues
/// - Invalid configuration parameters
Future<void> initializeWhitenoise({required WhitenoiseConfig config}) =>
    RustLib.instance.api.crateApiInitializeWhitenoise(config: config);

/// Deletes all data from the Whitenoise instance.
///
/// # WARNING: This action is irreversible
/// This function logs out all accounts and removes ALL local data from the application.
/// Use with extreme caution as this cannot be undone.
///
/// # Returns
/// * `Ok(())` - All data successfully deleted
/// * `Err(WhitenoiseError)` - If deletion fails or instance not initialized
///
/// # Usage
/// Typically used for:
/// - Factory reset functionality
/// - Complete app data cleanup during uninstall
/// - Development/testing purposes
/// - Recovery from corrupted state
///
/// # Example
/// ```rust
/// // Confirm with user before calling this
/// if user_confirmed_reset {
///     delete_all_data().await?;
///     println!("All data has been deleted");
/// }
/// ```
///
/// # Errors
/// Common failure reasons:
/// - Whitenoise not initialized
/// - File system permission issues
/// - Database locks or corruption
Future<void> deleteAllData() => RustLib.instance.api.crateApiDeleteAllData();

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WhitenoiseConfig>>
abstract class WhitenoiseConfig implements RustOpaqueInterface {}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<WhitenoiseError>>
abstract class WhitenoiseError implements RustOpaqueInterface {}
