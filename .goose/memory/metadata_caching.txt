# caching metadata bug-fix performance
Implemented comprehensive metadata caching solution to fix user profile mixup issue:

1. **Created MetadataCacheProvider** (`/lib/config/providers/metadata_cache_provider.dart`):
   - String-based caching using standardized npub format as keys
   - Automatic conversion between hex and npub formats
   - 1-hour cache expiry with cleanup mechanisms
   - Pending fetch tracking to prevent duplicate requests
   - Error handling with fallback to "Unknown User"

2. **Updated ContactsProvider** to use metadata cache:
   - Batch metadata fetching for improved performance
   - Consistent npub/hex key handling
   - Proper integration with existing contacts loading

3. **Updated UI components**:
   - `new_chat_bottom_sheet.dart`: Uses cache for metadata fetching
   - `search_chat_bottom_sheet.dart`: Added cache import for future integration
   - Contact deduplication in UI filters

4. **Created utility files**:
   - Examples showing proper cache usage patterns
   - Debug utilities for cache monitoring and validation
   - Performance benchmarking tools

5. **Key benefits**:
   - No more user metadata mix-ups due to consistent string-based keys
   - Improved performance with 1-hour caching
   - Proper handling of PublicKey object disposal issues
   - Standardized npub format prevents key collision issues
   - Easy to debug and monitor cache health

The solution ensures that each npub/hex maps to exactly one ContactModel, eliminating the avatar/name mixing issue.

